name: Build Docker image

on:
  push:
    branches:
      - release/*.*
      - master
      - gavrie-*

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PUBLIC_RELEASE: false
  DOCKERHUB_ACCOUNT: ultimagenomics
  IMAGE: glimpse

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_ACCOUNT }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get version name
        run: |
          set -e

          echo "Get base version number from branch name"
          branch_name=${{ github.ref_name }}
          if [[ "${branch_name}" =~ ^release/[0-9]+\.[0-9]+ ]]; then
            echo "PUBLIC_RELEASE=true" >> ${GITHUB_ENV}
          fi
          # remove illegal characters for docker tag
          base_version=$(echo ${branch_name##release/} | sed 's/[^a-zA-Z0-9.]/-/g')
          echo "Base version is ${base_version}"

          echo "Get latest tag for ${base_version}"
          latest_version_tag=$(git for-each-ref --sort=-v:refname --format='%(refname:strip=2)' refs/tags/${base_version}.* | head -1)
          if [ -z "${latest_version_tag}" ]; then
            version="${base_version}.1"
          else
            version_bits=(${latest_version_tag//./ })
            new_patch=$((${version_bits[-1]} + 1))
            version_bits[-1]=${new_patch}
            version="$(echo ${version_bits[*]} | sed 's/ /./g')"
          fi
          echo "New version is ${version}"

          echo "Set build env variables"
          echo "BASE_VERSION=${base_version}" >> ${GITHUB_ENV}
          echo "VERSION=${version}" >> ${GITHUB_ENV}

      - name: Set build timestamp and image tags
        run: |
          set -e

          image_tags=(
            ${{ env.VERSION }}
            ${{ env.BASE_VERSION }}
          )

          docker_registries=(${{ env.DOCKERHUB_ACCOUNT }})

          for registry in ${docker_registries[@]}; do
            for tag in ${image_tags[@]}; do
              docker_destinations+=${registry}/${{ env.IMAGE }}:${tag},
            done
          done

          echo "DOCKER_DESTINATIONS=${docker_destinations%,}" >> ${GITHUB_ENV}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # The code requires AVX-512, so we need to pass the appropriate build-args
          build-args: |
            BUILD_ARCH='skylake-avx512'
            VERSION=${{ env.VERSION }}
          tags: ${{ env.DOCKER_DESTINATIONS }}
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Tag git repo
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ env.VERSION }}
          message: "Built by ${{ github.workflow_ref }} workflow. Job ID: ${{ github.job }}"

      # can move base version tag to point to the latest build of a branch/test version
      # see: https://github.com/actions/toolkit/blob/master/docs/action-versioning.md
      - name: Tag git repo with base version
        if: env.BASE_VERSION
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "${{ env.BASE_VERSION }}-latest"
          force_push_tag: true
          message: "Built by ${{ github.workflow_ref }} workflow. Job ID: ${{ github.job }}"

      - name: Update action summary with built tags
        run: |
          echo "### IMAGE TAGS" >> ${GITHUB_STEP_SUMMARY}
          for dest in $(echo "${{ env.DOCKER_DESTINATIONS }}" | sed 's/,/ /g'); do 
            echo "- ${dest}" >> ${GITHUB_STEP_SUMMARY}
          done
